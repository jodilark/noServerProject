{"version":3,"sources":["app.js","controllers/mainCtrl.js","directives/connectionTestDir.js","directives/nestedRecipeDir.js","directives/shoppingList.js","directives/strikeOutDir.js","services/mainSrv.js","services/recipeListService.js","services/singleRecipeService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","url","controller","$scope","changeMeService","$stateParams","recipeListService","singleRecipeService","controllerTest","serviceTest","recipeListServiceTest","singleRecipeServiceTest","selectedRecipe","qtyToMake","id","theRecipe","match","join","listOfRecipes","getRecipeList","then","response","recipeCard","data","getRecipe","thisRecipe","tree","console","log","isRecipe","urltype","rawArr","rawMat","raw","name","qty","sName","sQty","recipeBool","push","shoppingListArr","testy","combineMats","a","ans","i","length","obj","jsonObject","shoppingJson","makeJson","arr","newKeyName","newValueQty","key","enabeGetRecipe","bool","getRecipeButton","directive","link","scope","element","attribure","on","css","service","$http","recipeList","crystal","ingredients","quantity","get"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('noServer', ['ui.router', 'ui.select', 'ngSanitize'])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n        $urlRouterProvider.otherwise('/', \"\")\r\n        $stateProvider\r\n            .state('home', {\r\n                templateUrl: './views/home.html',\r\n                url: '/'                \r\n            })\r\n            .state('recipe', {\r\n                templateUrl: './views/selectedRecipe.html',\r\n                url: '/recipe',    \r\n            })\r\n            \r\n\r\n    })","angular.module('noServer').controller('changeMeController', function ($scope, changeMeService, $stateParams, recipeListService, singleRecipeService) {\r\n    // hookup tests\r\n    $scope.controllerTest = \"changeMe controller is working\"\r\n    $scope.serviceTest = changeMeService.serviceTest\r\n    $scope.recipeListServiceTest = recipeListService.recipeListServiceTest\r\n    $scope.singleRecipeServiceTest = singleRecipeService.singleRecipeServiceTest\r\n\r\n    // list of variables   \r\n    $scope.selectedRecipe //two way binding\r\n    $scope.qtyToMake = 1 //two way binding\r\n    $scope.id = (selectedRecipe) => {\r\n        $scope.theRecipe(selectedRecipe.match(/\\d/ig).join(''))\r\n    }\r\n\r\n\r\n\r\n    // functions\r\n    //Get a list of all recipes\r\n    $scope.listOfRecipes = function () {\r\n        recipeListService.getRecipeList().then(function (response) {\r\n            $scope.recipeCard = response.data\r\n        })\r\n    }\r\n    $scope.listOfRecipes()\r\n\r\n    // Get a single recipe by ID\r\n    $scope.theRecipe = function (id) {\r\n        singleRecipeService.getRecipe(id).then(function (response) {\r\n            $scope.thisRecipe = response.data\r\n            $scope.tree = response.data.tree\r\n            console.log($scope.thisRecipe)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    // show directive span if recipe has a url_type = 'recipe'\r\n    $scope.isRecipe = function (urltype) {\r\n        return urltype > 0\r\n    }\r\n\r\n    //add tier1 objects to raw material array\r\n    var rawArr = []\r\n    $scope.rawMat = rawArr\r\n    $scope.raw = function (name, qty, sName, sQty, recipeBool) {\r\n        if (recipeBool) {\r\n            rawArr.push(\r\n                {\r\n                    [sName]: sQty\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            rawArr.push(\r\n                {\r\n                    [name]: qty\r\n                }\r\n            )\r\n        }\r\n\r\n        return rawArr //of raw objects and their quantities\r\n    }\r\n\r\n    // combine duplicate mats\r\n    var shoppingListArr = []\r\n    $scope.testy = shoppingListArr\r\n    $scope.combineMats = function (rawArr) {\r\n        let a = rawArr;\r\n        let ans = {};\r\n        for (let i = 0; i < a.length; ++i) {\r\n            for (let obj in a[i]) {\r\n                ans[obj] = ans[obj] ? ans[obj] + a[i][obj] : a[i][obj];\r\n            }\r\n        }\r\n        shoppingListArr.push(ans)\r\n    }\r\n\r\n    //make the shoppinListArr into a Json blob\r\n    var jsonObject = []\r\n    $scope.shoppingJson = jsonObject\r\n    $scope.makeJson = function (arr, newKeyName, newValueQty) {\r\n        let obj = arr[0]        \r\n        // console.log(obj)\r\n        for (let key in obj) {\r\n            // console.log(key)\r\n            // console.log(obj[key])\r\n            jsonObject.push(\r\n                {\r\n                    [newKeyName]: key\r\n                    , [newValueQty]: obj[key]\r\n                }\r\n            )\r\n        }\r\n        // console.log(jsonObject)\r\n    }\r\n\r\n//Enable get recipe button\r\n$scope.enabeGetRecipe = function(bool){\r\n    return $scope.getRecipeButton = bool\r\n}\r\n\r\n\r\n\r\n\r\n})","angular.module(\"noServer\").directive(\"tests\", function (changeMeService, recipeListService, singleRecipeService){\r\n    return {\r\n        templateUrl: \"../../views/connectionTest.html\"\r\n    }\r\n})","angular.module(\"noServer\").directive('nestedRecipe', function (recipeListService, singleRecipeService) {\r\n    return {\r\n        templateUrl: '../../views/nestedRecipe.html'\r\n    }\r\n})","angular.module(\"noServer\").directive('shoppingList', function (recipeListService, singleRecipeService) {\r\n    return {\r\n        templateUrl: '../../views/shoppingList.html'\r\n    }\r\n})","angular.module(\"noServer\").directive(\"strikeOut\", function (){\r\n    return {\r\n        link: function (scope, element, attribure){\r\n            element.on(\"click\", function (){             \r\n                 element.css('text-decoration', 'line-through')                \r\n            })\r\n        }\r\n    }\r\n})","angular.module('noServer').service('changeMeService', function ($http) {\r\n    this.serviceTest = \"changeMe service is working\"\r\n\r\n    // test data\r\n    this.recipeList = [{\r\n        name: \"soup\"\r\n        , id: 1\r\n        , crystal: \"fire\"\r\n        , ingredients: [{\r\n            name: \"onion\"\r\n            , quantity: 5\r\n        },\r\n        {\r\n            name: \"salt\"\r\n            , quantity: 2\r\n        },\r\n        {\r\n            name: \"grilled Meat\"\r\n            , quantity: 2\r\n            , isRecipe: true\r\n            , id: 3\r\n            , crystal: \"fire\"\r\n            , ingredients: [\r\n                {\r\n                    name: \"sheep meat\"\r\n                    , quantity: 1\r\n                },\r\n                {\r\n                    name: \"salt\"\r\n                    , quantity: 1\r\n                }\r\n            ]\r\n        }        \r\n    ]\r\n},\r\n    {\r\n        name: \"banana pie\",\r\n        id: 2\r\n    }\r\n    ]\r\n\r\n    \r\n\r\n})","angular.module('noServer').service('recipeListService', function ($http) {\r\n    this.recipeListServiceTest = \"recipeListService is working\"\r\n\r\nthis.getRecipeList  = () => ( $http.get('https://api.xivdb.com/recipe') )\r\n\r\n})","angular.module('noServer').service('singleRecipeService', function ($http) {\r\n    this.singleRecipeServiceTest = \"singleRecipeService is working\"\r\n\r\nthis.getRecipe = (id) => ( $http.get('https://api.xivdb.com/recipe/' + id).then(function (response) {\r\n            return response\r\n        }) )\r\n\r\n\r\n})\r\n"]}