{"version":3,"sources":["app.js","controllers/mainCtrl.js","directives/testDirective.js","services/mainSrv.js","services/recipeListService.js","services/singleRecipeService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","url","controller","$scope","changeMeService","$stateParams","recipeListService","singleRecipeService","controllerTest","serviceTest","recipeListServiceTest","singleRecipeServiceTest","selectedRecipe","qtyToMake","id","theRecipe","match","join","listOfRecipes","getRecipeList","then","response","recipeCard","data","getRecipe","thisRecipe","tree","console","log","isRecipe","urltype","foo","obj","undefined","array","push","Object","keys","bob","mynewitem","rawArr","rawMat","raw","name","qty","sName","sQty","recipeBool","sqty","iName","iqty","combineMats","i","length","key","a","ans","checkRawArr","directive","service","$http","recipeList","crystal","ingredients","quantity","get"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('noServer', ['ui.router', 'ui.select', 'ngSanitize'])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n        $urlRouterProvider.otherwise('/', \"\")\r\n        $stateProvider\r\n            .state('home', {\r\n                templateUrl: './views/home.html',\r\n                url: '/'                \r\n            })\r\n            .state('recipe', {\r\n                templateUrl: './views/testview.html',\r\n                url: '/recipe',    \r\n            })\r\n            \r\n\r\n\r\n    })","angular.module('noServer').controller('changeMeController', function ($scope, changeMeService, $stateParams, recipeListService, singleRecipeService) {\r\n    // hookup tests\r\n    $scope.controllerTest = \"changeMe controller is working\"\r\n    $scope.serviceTest = changeMeService.serviceTest\r\n    $scope.recipeListServiceTest = recipeListService.recipeListServiceTest\r\n    $scope.singleRecipeServiceTest = singleRecipeService.singleRecipeServiceTest\r\n\r\n    // list of variables   \r\n    $scope.selectedRecipe //two way binding\r\n    $scope.qtyToMake = 1 //two way binding\r\n    $scope.id = (selectedRecipe) => {\r\n        $scope.theRecipe(selectedRecipe.match(/\\d/ig).join(''))\r\n    }\r\n\r\n\r\n\r\n    // functions\r\n    //Get a list of all recipes\r\n    $scope.listOfRecipes = function () {\r\n        recipeListService.getRecipeList().then(function (response) {\r\n            $scope.recipeCard = response.data\r\n        })\r\n    }\r\n    $scope.listOfRecipes()\r\n\r\n    // Get a single recipe by ID\r\n    $scope.theRecipe = function (id) {\r\n        singleRecipeService.getRecipe(id).then(function (response) {\r\n            $scope.thisRecipe = response.data\r\n            $scope.tree = response.data.tree\r\n            console.log($scope.thisRecipe)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    // show directive span if recipe has a url_type = 'recipe'\r\n    $scope.isRecipe = function (urltype) {\r\n        return urltype > 0\r\n    }\r\n\r\n    //test to loop through object\r\n    $scope.foo = function (obj) {\r\n        if (obj === undefined || obj === null) {\r\n            return\r\n        }\r\n        else {\r\n            let array = []\r\n            array.push(Object.keys(obj))\r\n            var bob = array.join(\"\")\r\n            return $scope.mynewitem = `item.synths[${bob}].tree`\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //add tier1 objects to raw material array\r\n    var rawArr = []\r\n    $scope.rawMat = rawArr\r\n    $scope.raw = function (name, qty, sName, sQty, recipeBool) {\r\n        // console.log(`this is the name ${name}`)\r\n        // console.log(`this is the qty ${qty}`)\r\n        // console.log(`this is the sName ${sName}`)\r\n        // console.log(`this is the sQty ${sQty}`)\r\n        if (recipeBool) {\r\n            // console.log(`yup true`)\r\n            rawArr.push(\r\n                {\r\n                   sName: sName\r\n                    , sqty: sQty\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            rawArr.push(\r\n                {\r\n                    iName: name\r\n                    , iqty: qty\r\n                }\r\n            )\r\n        }\r\n\r\n        return rawArr //of raw objects and their quantities\r\n    }\r\n\r\n    // combine duplicate mats\r\n    $scope.combineMats = function (rawArr) {\r\n        //make all name say sName\r\n        for (let i = 0; i < rawArr.length; i++) {\r\n            for (let key in rawArr[i]) {\r\n                // console.log(`key is ${key}`)\r\n                if (key === 'iName') {\r\n                    // console.log(`this is the iName - ${key}`)\r\n                    rawArr[i]['sName'] = rawArr[i]['iName'];\r\n                    rawArr[i]['sqty'] = rawArr[i]['iqty'];\r\n                    delete rawArr[i]['iName'];\r\n                    delete rawArr[i]['iqty'];\r\n                }\r\n            }\r\n        }\r\n        //add duplicate names\r\n        var a = rawArr;\r\n        var ans = {};\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            console.log(i)\r\n            console.log(a[i])\r\n            for (var obj in a[i]) {\r\n        \r\n                    ans[obj] = ans[obj] ? ans[obj] + a[i][obj] : a[i][obj];\r\n                \r\n            }\r\n        }\r\n        console.log(`this is a = ${ans.sName} ${ans.sqty}`)\r\n\r\n        // return rawMaterials\r\n    }\r\n\r\n\r\n    //just to check the rawArr\r\n    $scope.checkRawArr = function (rawArr) {\r\n        console.log(rawArr)\r\n    }\r\n\r\n\r\n\r\n\r\n})","angular.module(\"noServer\").directive('testDirective', function (recipeListService, singleRecipeService) {\r\n    return {\r\n        templateUrl: '../../views/testDirective.html'\r\n    }\r\n})","angular.module('noServer').service('changeMeService', function ($http) {\r\n    this.serviceTest = \"changeMe service is working\"\r\n\r\n    // test data\r\n    this.recipeList = [{\r\n        name: \"soup\"\r\n        , id: 1\r\n        , crystal: \"fire\"\r\n        , ingredients: [{\r\n            name: \"onion\"\r\n            , quantity: 5\r\n        },\r\n        {\r\n            name: \"salt\"\r\n            , quantity: 2\r\n        },\r\n        {\r\n            name: \"grilled Meat\"\r\n            , quantity: 2\r\n            , isRecipe: true\r\n            , id: 3\r\n            , crystal: \"fire\"\r\n            , ingredients: [\r\n                {\r\n                    name: \"sheep meat\"\r\n                    , quantity: 1\r\n                },\r\n                {\r\n                    name: \"salt\"\r\n                    , quantity: 1\r\n                }\r\n            ]\r\n        }        \r\n    ]\r\n},\r\n    {\r\n        name: \"banana pie\",\r\n        id: 2\r\n    }\r\n    ]\r\n\r\n})","angular.module('noServer').service('recipeListService', function ($http) {\r\n    this.recipeListServiceTest = \"recipeListService is working\"\r\n\r\nthis.getRecipeList  = () => ( $http.get('https://api.xivdb.com/recipe') )\r\n\r\n})","angular.module('noServer').service('singleRecipeService', function ($http) {\r\n    this.singleRecipeServiceTest = \"singleRecipeService is working\"\r\n\r\nthis.getRecipe = (id) => ( $http.get('https://api.xivdb.com/recipe/' + id).then(function (response) {\r\n            return response\r\n        }) )\r\n\r\n\r\n})\r\n"]}