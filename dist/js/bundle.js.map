{"version":3,"sources":["app.js","controllers/mainCtrl.js","directives/testDirective.js","services/mainSrv.js","services/recipeListService.js","services/singleRecipeService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","url","controller","$scope","changeMeService","$stateParams","recipeListService","singleRecipeService","controllerTest","serviceTest","recipeListServiceTest","singleRecipeServiceTest","selectedRecipe","qtyToMake","id","theRecipe","match","join","listOfRecipes","getRecipeList","then","response","recipeCard","data","getRecipe","thisRecipe","tree","console","log","isConnected","itemConnected","itemName","directive","replace","link","scope","element","attribute","css","service","$http","recipeList","name","crystal","ingredients","quantity","isRecipe","get"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('noServer', ['ui.router'])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n        $urlRouterProvider.otherwise('/', \"\")\r\n        $stateProvider\r\n            .state('home', {\r\n                templateUrl: './views/home.html',\r\n                url: '/'                \r\n            })\r\n            .state('recipe', {\r\n                templateUrl: './views/testview.html',\r\n                url: '/recipe',    \r\n            })\r\n            \r\n\r\n\r\n    })","angular.module('noServer').controller('changeMeController', function ($scope, changeMeService, $stateParams, recipeListService, singleRecipeService) {\r\n    // hookup tests\r\n    $scope.controllerTest = \"changeMe controller is working\"\r\n    $scope.serviceTest = changeMeService.serviceTest\r\n    $scope.recipeListServiceTest = recipeListService.recipeListServiceTest\r\n    $scope.singleRecipeServiceTest = singleRecipeService.singleRecipeServiceTest\r\n\r\n    // list of variables   \r\n    $scope.selectedRecipe //two way binding\r\n    $scope.qtyToMake //two way binding\r\n    $scope.id = (selectedRecipe) => {\r\n        $scope.theRecipe(selectedRecipe.match(/\\d/ig).join(''))\r\n    }\r\n\r\n\r\n\r\n    // functions\r\n    //Get a list of all recipes\r\n    $scope.listOfRecipes = function () {\r\n        recipeListService.getRecipeList().then(function (response) {\r\n            $scope.recipeCard = response.data\r\n        })\r\n    }\r\n    $scope.listOfRecipes()\r\n\r\n    // Get a single recipe by ID\r\n    $scope.theRecipe = function (id) {\r\n        singleRecipeService.getRecipe(id).then(function (response) {\r\n            $scope.thisRecipe = response.data\r\n            $scope.tree = response.data.tree\r\n            console.log($scope.thisRecipe)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    // helper method to check if item is \"connected\"\r\n$scope.isConnected = function(itemConnected, itemName){\r\n    if(itemConnected = true){\r\n        console.log(itemName)\r\n    }\r\n}\r\n\r\n\r\n\r\n})","angular.module(\"noServer\").directive('testDirective', function () {\r\n    return {\r\n        replace: true\r\n        , templateUrl: '../../views/testDirective.html'\r\n        , link: function (scope, element, attribute) {\r\n            if (scope.itemConnected = true){\r\n                element.css(\"height\", \"0px\")\r\n            }\r\n        }\r\n    }\r\n})","angular.module('noServer').service('changeMeService', function ($http) {\r\n    this.serviceTest = \"changeMe service is working\"\r\n\r\n    // test data\r\n    this.recipeList = [{\r\n        name: \"soup\"\r\n        , id: 1\r\n        , crystal: \"fire\"\r\n        , ingredients: [{\r\n            name: \"onion\"\r\n            , quantity: 5\r\n        },\r\n        {\r\n            name: \"salt\"\r\n            , quantity: 2\r\n        },\r\n        {\r\n            name: \"grilled Meat\"\r\n            , quantity: 2\r\n            , isRecipe: true\r\n            , id: 3\r\n            , crystal: \"fire\"\r\n            , ingredients: [\r\n                {\r\n                    name: \"sheep meat\"\r\n                    , quantity: 1\r\n                },\r\n                {\r\n                    name: \"salt\"\r\n                    , quantity: 1\r\n                }\r\n            ]\r\n        }        \r\n    ]\r\n},\r\n    {\r\n        name: \"banana pie\",\r\n        id: 2\r\n    }\r\n    ]\r\n\r\n})","angular.module('noServer').service('recipeListService', function ($http) {\r\n    this.recipeListServiceTest = \"recipeListService is working\"\r\n\r\nthis.getRecipeList  = () => ( $http.get('https://api.xivdb.com/recipe') )\r\n\r\n})","angular.module('noServer').service('singleRecipeService', function ($http) {\r\n    this.singleRecipeServiceTest = \"singleRecipeService is working\"\r\n\r\nthis.getRecipe = (id) => ( $http.get('https://api.xivdb.com/recipe/' + id).then(function (response) {\r\n            return response\r\n        }) )\r\n\r\n\r\n})\r\n"]}